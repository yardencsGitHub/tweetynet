from collections import namedtuple

import numpy as np
import pandas as pd


SegmentErrorRates = namedtuple(typename='SegmentErrorRates',
                               field_names=('segment_error_rates', 'mean_segment_error_rate'))


def segment_error_rate(prep_csv_path,
                       pred_path,
                       split='test'):
    """compute segment error rates--
    i.e. a normalized edit distance--
    given ground truth labels and
    the labels predicted using
    features extracted from segments.

    Parameters
    ----------
    prep_csv_path : str, pathlib.Path
        path to csv generated by running ``vak prep``.
        Used to get ground truth annotation.
    pred_path : pathlib.Path
        path to flat text file of predicted labels --
        each line is the labels predicted for one audio file,
        corresponding to the row in ``prep_csv_path``
        indexed by that line number.

    Returns
    -------
    seg_error_tuple : named tuple
        with fields 'segment_error_rates' and 'mean_segment_error_rate'.
        The 'segment_error_rates' is a list of values,
        one for each line in the .txt annotation files.
        The 'mean_segment_error_rate' is the mean across
        the 'segment_error_rates' list.
    """
    import vak

    prep_df = pd.read_csv(prep_csv_path)
    prep_df = prep_df[prep_df.split == split]
    annots = vak.annotation.from_df(prep_df)
    y_true = [''.join(annot.seq.labels.tolist()) for annot in annots]

    seg_error_rate = vak.metrics.SegmentErrorRate()

    with pred_path.open('r') as fp:
        y_pred = fp.read().splitlines()

    rates = np.array([
        seg_error_rate(y_pred, y_true)
        for y_pred, y_true in zip(y_pred, y_true)
    ])

    seg_error_tuple = SegmentErrorRates(segment_error_rates=rates,
                                        mean_segment_error_rate=rates.mean())

    return seg_error_tuple
